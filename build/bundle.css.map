{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\Card.svelte",
    "..\\..\\CardDeck.svelte",
    "..\\..\\CardTable.svelte",
    "..\\..\\ColorCard.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from \"svelte\";\n\n  import CardDeck from \"./CardDeck.svelte\";\n  import CardTable from \"./CardTable.svelte\";\n  import ColorCard from \"./ColorCard.svelte\";\n  import { gameState, currentColor } from \"./stores\";\n\n  function handleChallenge() {\n    const challengeButton = document.getElementById(\"challenge\");\n    if (challengeButton.textContent === \"Challenge\") {\n      const uncommitted = document.querySelector(\n        \"#cardTable > .card:not(.played)\"\n      );\n      if (uncommitted) {\n        document.getElementById(\"newCard\").appendChild(uncommitted);\n      }\n      gameState.set(\"reveal\");\n      challengeButton.textContent = \"Clear Table\";\n    } else {\n      gameState.set(\"\");\n      challengeButton.textContent = \"Challenge\";\n      document\n        .querySelectorAll(\"#cardTable > .played\")\n        .forEach((c) => c.remove());\n      const nextCard = document.querySelector(\"#newCard > .card\");\n      document.getElementById(\"cardTable\").appendChild(nextCard);\n      document.querySelector(\"#newDeck > span\").click();\n\n      currentColor.set(\n        [\"red\", \"blue\", \"yellow\", \"cyan\"][Math.floor(Math.random() * 4)]\n      );\n    }\n  }\n\n  $: $currentColor, () => console.log($currentColor);\n</script>\n\n<main>\n  <h1>Optics</h1>\n  <button id=\"challenge\" on:click={handleChallenge}>Challenge</button>\n  <CardDeck />\n  <div>\n    <ColorCard />\n    <CardTable />\n  </div>\n  <a style=\"position: absolute; top: 5px; right: 5px; z-index: 100;\" id=\"gh_link\" class=\"right\" href=\"https://github.com/IHTFY/optics\">\n    <svg id=\"gh_logo\" height=\"32\" width=\"32\" fill=\"#ff3e00\">\n      <path d=\"M16 0C7.2 0 0 7.2 0 16c0 7.1 4.6 13 11 15 .8 .14 1.1-.34 1.1-.76 0-.38-.02-1.6-.02-3-4 .74-5.1-.98-5.4-1.9-.18-.46-.96-1.9-1.6-2.3-.56-.3-1.4-1-.02-1.1 1.3-.02 2.2 1.2 2.5 1.6 1.4 2.4 3.7 1.7 4.7 1.3 .14-1 .56-1.7 1-2.1-3.6-.4-7.3-1.8-7.3-7.9 0-1.7 .62-3.2 1.6-4.3-.16-.4-.72-2 .16-4.2 0 0 1.3-.42 4.4 1.6 1.3-.36 2.6-.54 4-.54 1.4 0 2.7 .18 4 .54 3.1-2.1 4.4-1.6 4.4-1.6 .88 2.2 .32 3.8 .16 4.2 1 1.1 1.6 2.5 1.6 4.3 0 6.1-3.7 7.5-7.3 7.9 .58 .5 1.1 1.5 1.1 3 0 2.1-.02 3.9-.02 4.4 0 .42 .3 .92 1.1 .76A16 16 0 0 0 32 16c0-8.8-7.2-16-16-16z\"></path>\n    </svg>\n  </a>\n</main>\n\n<style>\n  main {\n    color: white;\n    text-align: center;\n    align-items: center;\n    padding: 1em;\n    margin: 0 auto;\n  }\n\n  h1 {\n    color: #ff3e00;\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 100;\n  }\n\n  #challenge {\n    font-size: 1.5em;\n    background-color: #ffa50080;\n    border-color: #ffa500;\n    color: white;\n  }\n</style>\n",
    "<script>\r\n  import drawFace from \"./drawFace.js\";\r\n  import analyzeFace from \"./analyzeFace.js\";\r\n  import { gameState } from \"./stores\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  export let played = false;\r\n\r\n  let percentages;\r\n\r\n  let cardFace;\r\n\r\n  onMount(() => {\r\n    const canvas = cardFace;\r\n\r\n    drawFace(canvas);\r\n\r\n    percentages = analyzeFace(canvas);\r\n  });\r\n</script>\r\n\r\n<div class=\"card\" class:played>\r\n  {#if $gameState === \"reveal\" && played}\r\n    <div id=\"display\">\r\n      <!-- TODO make a pretty display. Overlay or below? -->\r\n      <div style=\"color: red;\">Red {percentages.red}%</div>\r\n      <div style=\"color: blue;\">Blue {percentages.blue}%</div>\r\n      <div style=\"color: yellow;\">Yellow {percentages.yellow}%</div>\r\n      <div style=\"color: cyan;\">Cyan {percentages.cyan}%</div>\r\n    </div>\r\n  {/if}\r\n  <canvas bind:this={cardFace} width=\"150px\" height=\"240px\" />\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    position: relative;\r\n    background-color: #eee;\r\n    display: inline-block;\r\n    width: 150px;\r\n    height: 240px;\r\n    border: 5px solid;\r\n    border-radius: 5%;\r\n    border-color: orange;\r\n    /* overflow: hidden; */\r\n    margin: 5px;\r\n  }\r\n\r\n  .played {\r\n    border-color: #ccc;\r\n  }\r\n\r\n  #display {\r\n    display: table;\r\n    background-color: #00000040;\r\n    text-transform: uppercase;\r\n    position: absolute;\r\n    width: 100%;\r\n    font-size: 22px;\r\n    font-weight: 700;\r\n    -webkit-text-stroke: 0.3px white;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n\r\n    border-radius: 5%;\r\n\r\n    user-select: none;\r\n    overflow: hidden;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import Sortable from \"sortablejs\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  import Card from \"./Card.svelte\";\r\n\r\n  let theNextCard;\r\n  let played;\r\n\r\n  function addNewCard() {\r\n    theNextCard.$set({ played: true });\r\n\r\n    theNextCard = new Card({\r\n      target: document.getElementById(\"newCard\"),\r\n      props: {\r\n        played: false,\r\n      },\r\n    });\r\n  }\r\n\r\n  onMount(() => {\r\n    Sortable.create(newCard, {\r\n      group: {\r\n        name: \"deck\",\r\n        put: \"table\",\r\n        pull: \"table\",\r\n      },\r\n      animation: 150,\r\n    });\r\n  });\r\n</script>\r\n\r\n<div id=\"newDeck\">\r\n  <span on:click={addNewCard}>âœ“</span>\r\n  <div id=\"newCard\">\r\n    <Card bind:played bind:this={theNextCard} />\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  span {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    user-select: none;\r\n\r\n    font-size: 5em;\r\n    background-color: transparent;\r\n    border: none;\r\n    color: white;\r\n    opacity: 1;\r\n  }\r\n\r\n  #newDeck {\r\n    position: relative;\r\n    margin: 0 auto;\r\n    padding: 45px 5px;\r\n    width: 240px;\r\n    min-height: 260px;\r\n    border-radius: 5%;\r\n    background-color: #ffa50030;\r\n  }\r\n\r\n  #newCard {\r\n    width: 100%;\r\n    min-height: 240px;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import Sortable from \"sortablejs\";\r\n  import { onMount } from \"svelte\";\r\n  import Card from \"./Card.svelte\";\r\n\r\n  onMount(() => {\r\n    Sortable.create(cardTable, {\r\n      group: {\r\n        name: \"table\",\r\n        put: \"deck\",\r\n        pull: true,\r\n      },\r\n      filter: \".played\",\r\n      animation: 150,\r\n    });\r\n  });\r\n</script>\r\n\r\n<div id=\"cardTable\">\r\n  <Card played={true} />\r\n</div>\r\n\r\n<style>\r\n  #cardTable {\r\n    display: inline-block;\r\n    /* width: 100%; */\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import { currentColor } from \"./stores\";\r\n\r\n  let canvas;\r\n\r\n  onMount(() => {\r\n    function drawArrow(color) {\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.strokeStyle = \"#ccc\";\r\n      ctx.lineWidth = 5;\r\n      ctx.fillStyle = $currentColor;\r\n      ctx.beginPath();\r\n      ctx.moveTo(235, 75);\r\n      ctx.lineTo(140, 145);\r\n      ctx.lineTo(160, 95);\r\n      ctx.lineTo(5, 100);\r\n      ctx.lineTo(5, 50);\r\n      ctx.lineTo(160, 55);\r\n      ctx.lineTo(140, 5);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n      ctx.stroke();\r\n    }\r\n\r\n    currentColor.subscribe(() => {\r\n      drawArrow($currentColor);\r\n    });\r\n  });\r\n</script>\r\n\r\n<div><canvas bind:this={canvas} width=\"240px\" height=\"150px\" /></div>\r\n\r\n<style>\r\n  div {\r\n    position: relative;\r\n    background-color: #999;\r\n    display: inline-block;\r\n    width: 240px;\r\n    height: 150px;\r\n    border: 5px solid;\r\n    border-color: #ccc;\r\n    border-radius: 5%;\r\n  }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "AAsDE,IAAI,cAAC,CAAC,AACJ,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,EAAE,cAAC,CAAC,AACF,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,UAAU,cAAC,CAAC,AACV,SAAS,CAAE,KAAK,CAChB,gBAAgB,CAAE,SAAS,CAC3B,YAAY,CAAE,OAAO,CACrB,KAAK,CAAE,KAAK,AACd,CAAC;ACvCD,KAAK,eAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,gBAAgB,CAAE,IAAI,CACtB,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CACjB,aAAa,CAAE,EAAE,CACjB,YAAY,CAAE,MAAM,CAEpB,MAAM,CAAE,GAAG,AACb,CAAC,AAED,OAAO,eAAC,CAAC,AACP,YAAY,CAAE,IAAI,AACpB,CAAC,AAED,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,KAAK,CACd,gBAAgB,CAAE,SAAS,CAC3B,cAAc,CAAE,SAAS,CACzB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,CAChB,mBAAmB,CAAE,KAAK,CAAC,KAAK,CAChC,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAEhC,aAAa,CAAE,EAAE,CAEjB,WAAW,CAAE,IAAI,CACjB,QAAQ,CAAE,MAAM,AAClB,CAAC;AC7BD,IAAI,eAAC,CAAC,AACJ,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAChC,WAAW,CAAE,IAAI,CAEjB,SAAS,CAAE,GAAG,CACd,gBAAgB,CAAE,WAAW,CAC7B,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,CAAC,AACZ,CAAC,AAED,QAAQ,eAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,IAAI,CAAC,GAAG,CACjB,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,EAAE,CACjB,gBAAgB,CAAE,SAAS,AAC7B,CAAC,AAED,QAAQ,eAAC,CAAC,AACR,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,KAAK,AACnB,CAAC;AC5CD,UAAU,eAAC,CAAC,AACV,OAAO,CAAE,YAAY,AAEvB,CAAC;ACQD,GAAG,cAAC,CAAC,AACH,QAAQ,CAAE,QAAQ,CAClB,gBAAgB,CAAE,IAAI,CACtB,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CACjB,YAAY,CAAE,IAAI,CAClB,aAAa,CAAE,EAAE,AACnB,CAAC"
}